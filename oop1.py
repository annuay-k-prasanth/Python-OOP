# -*- coding: utf-8 -*-
"""OOP1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Jj7s86l2XM3fTbMYYZ45cYBkHMPq3A3z
"""

class Person:
  def __init__ (self,name,age):
    self.namey=name
    self.age= age
  def greet( self):
    print(f"Hello, my name is {self.namey} and i am {self.age} years old")

person1=Person('Annuay',20)
person1.greet()

person2=Person('John', 45)
person2.greet()

class User:
  def __init__ (self,username,email,password):
    self.name=username
    self.email=email
    self.password=password
  def say_hi_to_user(self,user):
    print(f"sending Hi to {user.name} : Hi {user.name}! this is from {self.name}")
user1=User("John","john@123","1234")
user2=User("Annuay","annuay@123","41112")
user1.say_hi_to_user(user2)

"""Accessing and Modifying method

Getters and Setters
"""

from datetime import datetime
class User:

  def __init__(self,username,email,password):
    self.name=username
    self._email=email
    self.__password=password

  def set_password(self,new_password):
    self.__password=new_password
    print("Password Updated")

  def get_password(self):
    return self.__password

  def clean_email(self):
        return self._email.lower().strip()

  def get_email(self):
    print(f"email accessed at {datetime.now()}")
    return self.clean_email()

  def set_email(self,new_email):
    if "@" in new_email:
      self._email=new_email
    else:
      print("Invalid Email")

user1=User("John","John@gmail","ABC123")
th=user1.clean_email()
print(th)
user1.set_password("12345")
print(user1.get_password())
print(user1.get_email())
user1.set_email("JOhn@gmail")
print(user1.get_email())

"""@property decorator"""

from datetime import datetime
class User:
    def __init__ (self,username,email,password):
      self.username=username
      self._email=email
      self.password=password

    @property
    def email(self):
      print(f"email accessed at {datetime.now()}")
      return self._email.lower().strip()
    @email.setter
    def email(self,new_email):
      if "@" in new_email:
        self._email=new_email
        print("email updated")
      else:
        print("invalid email")

user2=User("Modi","MOdi@gmail.com","1234")
user2.email="Modigmail.com"
print(user2.email)

"""Static Attributes"""

class User:
  user_count=0
  def __init__ (self,name,email,password):
    self.name=name
    self._email=email
    self.password=password
    User.user_count += 1

  def display_user(self):
    print(f"Name: {self.name}\nEmail: {self._email}")

user1=User("rahul","rahul@gmail.com","145234")
user2=User("bhai","bhai@gmail","1234")
user1.display_user()
user2.display_user()

print(User.user_count)

